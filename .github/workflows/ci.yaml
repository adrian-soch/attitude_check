name: C/C++ CI # The name of the workflow

on: # The trigger for the workflow
  push:
    branches: [ main ] # Only for the main branch
  pull_request:
    branches: [ main ]

jobs: # The jobs for the workflow
  build-and-unittest:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-20.04 # The operating system to run the job on
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            .github
            src
            test
      - name: Install dependencies
        run: sudo apt-get install -y ca-certificates curl gnupg lsb-release cmake lcov cppcheck
      - name: Install gtest
        run: sudo apt-get install libgtest-dev && cd /usr/src/gtest && sudo cmake CMakeLists.txt
      - name: Run custom build script
        run: bash build.sh test
      - name: Run unit tests
        run: bash build.sh test
      - name: Generate coverage report
        run: |
          lcov --capture --directory . --output-file coverage.info
          lcov --remove coverage.info '/usr/*' --output-file coverage.info
          lcov --list coverage.info
          genhtml coverage.info --output-directory out
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage.info # The coverage report file generated by gcov or lcov
          slug: adrian-soch/attitude_check
          exclude: "**/test"

  portability-test:
    if: github.event.pull_request.draft == false
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, ubuntu-22.04, windows-10, windows-11, macos-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            .github
            src
            test
      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v1.14
        with:
          cmake-version: '3.14'

      - name: Install dependencies
        if: startsWith(matrix.os, 'ubuntu')
        run: sudo apt-get install -y lcov cppcheck libgtest-dev
      - name: Install gtest
        if: startsWith(matrix.os, 'ubuntu')
        run: cd /usr/src/gtest && sudo cmake CMakeLists.txt
      - name: Install dependencies
        if: matrix.os == 'macos-latest'
        run: brew install lcov cppcheck gtest
      - name: Install dependencies
        if: matrix.os == 'windows-latest'
        run: choco install lcov cppcheck gtest
      - name: Run custom build script
        run: bash build.sh test
      - name: Run unit tests
        run: bash build.sh test
